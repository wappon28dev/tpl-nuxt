name: build

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: "viewer"
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 📸 Calculate commit hash
        id: sha
        uses: pr-mpt/actions-commit-hash@v2

      - name: 🔨 Prepare Node environment
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: 🎉 Install project dependencies
        run: yarn

      - name: 📦 Build electron project
        run: yarn run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ⬆️ Windows portable upload
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3.1.1
        with:
          name: lapsquash_viewer_windows_${{ steps.sha.outputs.short }}_portable
          path: release/win-unpacked

      - name: 🗑️ Clean up artifacts
        shell: bash
        run: npx rimraf "release/!(*.exe|*.deb|*.AppImage|*.dmg)"

      - name: ⬆️ Artifacts upload
        uses: actions/upload-artifact@v3.1.1
        env:
          OS_NAME: ${{ matrix.os == 'windows-latest' && 'windows' || '' }}${{ matrix.os == 'macOS-latest' && 'macOS' || '' }}${{ matrix.os == 'ubuntu-latest' && 'linux' || '' }}
        with:
          name: lapsquash_viewer_${{ env.OS_NAME }}_${{ steps.sha.outputs.short }}
          path: release

      - name: 🚚 Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release
